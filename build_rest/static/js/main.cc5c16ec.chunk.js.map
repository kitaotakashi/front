{"version":3,"sources":["firebase.ts","services/format/unit.ts","stores/units.ts","stores/unit.ts","stores/index.ts","theme.ts","components/Layout/styles.tsx","components/Navigation/SideDrawer/styles.tsx","components/Navigation/SideDrawer/SideDrawerHeader.tsx","components/Navigation/NavigationList/NavigationList.tsx","components/Navigation/SideDrawer/SideDrawer.tsx","components/Layout/Layout.tsx","components/UI/SearchBar/styles.tsx","components/UI/SearchBar/SearchBar.tsx","components/UI/ToggleMenu/ToggleMenu.tsx","components/UI/IndexToolbar/IndexToobar.tsx","components/BatteryUnit/Units/styles.tsx","components/Icon/BatteryIcon/BatteryIcon.tsx","components/BatteryUnit/Units/UnitCard.tsx","containers/BatteryUnit/Units/styles.tsx","containers/BatteryUnit/Units/Units.tsx","components/BatteryUnit/Unit/styles.tsx","components/BatteryUnit/Unit/InfoItem.tsx","components/BatteryUnit/Unit/UnitInfo.tsx","components/BatteryUnit/Unit/UnitPerformance.tsx","components/BatteryUnit/Unit/CustomerInfo.tsx","components/BatteryUnit/Unit/LocationMap.tsx","containers/BatteryUnit/Unit/Unit.tsx","test/test.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","setRequiredAction","errorCode","setProductTypeName","productType","unitsSlice","createSlice","name","initialState","units","reducers","setUnits","state","action","payload","actions","unit","id","requiredAction","undefined","profile","modelNumber","productTypeName","location","latitude","longitude","status","isCharging","isPowerOn","soc","soh","capacity","current","voltage","timestamps","registeredAt","Date","lastUpdatedAt","customerId","unitSlice","setUnit","rootReducer","combineReducers","unitsReducer","unitReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","theme","createMuiTheme","palette","primary","main","light","secondary","error","shape","Div","styled","div","Main","props","spacing","transitions","create","easing","sharp","duration","leavingScreen","drawerWidth","isOpen","easeOut","enteringScreen","StyledAppBar","AppBar","StyledIconButton","IconButton","StyledDrawer","Drawer","useStyles","makeStyles","createStyles","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","SideDrawerHeader","classes","className","children","NavigationItems","text","icon","link","NavigationList","List","map","item","ListItem","component","Link","to","key","ListItemIcon","ListItemText","drawerPaper","width","SideDrawer","position","Toolbar","color","aria-label","onClick","drawerOpener","edge","Typography","variant","noWrap","anchor","open","paper","drawerCloser","Layout","React","useState","setOpen","CssBaseline","SearchBar","borderRadius","common","white","breakpoints","up","StyledSearchIcon","SearchIcon","SearchInput","InputBase","placeholder","inputProps","ToggleMenu","anchorRef","useRef","handleClose","event","contains","target","handleListKeyDown","preventDefault","prevOpen","useEffect","focus","menuItemList","menuItems","menuItem","MenuItem","Button","ref","aria-controls","aria-haspopup","disableElevation","startIcon","buttonIcon","buttonText","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","IndexToolbar","toggleMenuItemList","sortMenuItemList","filterMenuItemList","Grid","container","justify","xs","md","lg","UnitCard","Card","UnitCardContent","CardContent","UnitId","h1","ModelNumber","p","Status","a","OtherInfo","SOC","setBatteryIcon","size","htmlColor","BatteryIconBase","BatteryFull","withComponent","BatteryFullIcon","Battery90","Battery90Icon","Battery80","Battery80Icon","Battery60","Battery60Icon","Battery50","Battery50Icon","Battery30","Battery30Icon","Battery20","Battery20Icon","BatteryAlert","BatteryAlertIcon","BatteryIcon","toString","CardHeader","title","titleTypographyProps","align","Math","round","RouterLink","Units","dispatch","useDispatch","useSelector","console","log","collection","get","then","querySnapShot","unitsList","forEach","doc","push","data","err","sm","IndexToobar","InfoPaper","Header","h2","Key","h4","Value","h3","InfoItem","itemKey","UnitInfo","UnitPerformance","CustomerInfo","companyName","industry","personnelName","email","phoneNumber","AnyReactComponent","LocationMap","height","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","Unit","match","params","exists","fetchUnit","unitDetail","alertMessage","Alert","severity","Login","fetch","method","headers","body","JSON","stringify","pass","response","json","catch","withRouter","routes","exact","path","StylesProvider","injectFirst","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cc5c16ec.chunk.js","sourcesContent":["// Firebase config should be splitted into independant file later\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\nimport \"firebase/analytics\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDSYnB9koxoXFDqHvE30UitgLaC-Vza4lA\",\n  authDomain: \"robot-proto-9159a.firebaseapp.com\",\n  databaseURL: \"https://robot-proto-9159a.firebaseio.com\",\n  projectId: \"robot-proto-9159a\",\n  storageBucket: \"robot-proto-9159a.appspot.com\",\n  messagingSenderId: \"65291959110\",\n  appId: \"1:65291959110:web:4acc2a4748a52dcaf84347\",\n  measurementId: \"G-T7Z9GRKXB7\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\nexport const db = firebase.firestore();","export const setRequiredAction = (errorCode: number) => {\n    switch (errorCode) {\n        case 0:\n            return undefined;\n        case 1:\n            return 'To be collected';\n        case 2:\n            return 'Please contact customer';\n        case 3:\n            return 'other error';\n        default:\n            return 'some errors';\n    }\n}\n\nexport const setProductTypeName = (productType: number) => {\n    switch (productType) {\n        case 0:\n            return 'forklift';\n        case 1:\n            return 'cold storage';\n        case 2:\n            return 'heavy machinary';\n        default:\n            return 'Product Type undefined';\n    }\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { db } from '../firebase';\nimport { Dispatch } from 'redux';\nimport { UnitSummary } from '../types/unit';\nimport { setProductTypeName, setRequiredAction } from '../services/format/unit';\n\ninterface UnitsState {\n    units: UnitSummary[],\n}\n\nconst initialState: UnitsState = {\n    units: []\n};\n\nconst unitsSlice = createSlice({\n    name: 'units',\n    initialState,\n    reducers: {\n        setUnits: (state, action) => {state.units = action.payload},\n        // setUnit: (state, action) => {state.units.push(action.payload)},\n    }\n});\n\nexport default unitsSlice.reducer;\nexport const { setUnits } = unitsSlice.actions;\n\nexport const initUnits = () => async (dispatch: Dispatch) => {\n    try {\n        db.collection('units').get().then(querySnapShot => {\n            let unitsList: UnitSummary[] = [];\n            querySnapShot.forEach(doc => {\n                unitsList.push({\n                    id: doc.id,\n                    requiredAction: setRequiredAction(doc.data().errorCode),\n                    profile: {\n                    productTypeName: setProductTypeName(doc.data().profile.productType),\n                    modelNumber: doc.data().profile.modelNumber,\n                    location: doc.data().profile.location,\n                    },\n                    isCharging: doc.data().status.isCharging,\n                    isPowerOn: doc.data().status.isPowerOn,\n                    soc: doc.data().status.soc,\n                });\n            }\n            );\n            dispatch(setUnits(unitsList));\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { db } from '../firebase';\nimport { Dispatch } from 'redux';\nimport { UnitDetail } from '../types/unit';\nimport { setProductTypeName, setRequiredAction } from '../services/format/unit';\n\ninterface UnitState {\n    unit: UnitDetail,\n}\n\nconst initialState: UnitState = {\n    unit: {\n        id: '',\n        errorCode: 0,\n        requiredAction: undefined,\n        profile: {\n            modelNumber: '',\n            productTypeName: '',\n            location: {\n                latitude: 0,\n                longitude: 0\n            },\n        },\n        status: {\n            isCharging: false,\n            isPowerOn: false,\n            soc: 0,\n            soh: 0,\n            capacity: 0,\n            current: 0,\n            voltage: 0,\n        },\n        timestamps: {\n            registeredAt: new Date(0),\n            lastUpdatedAt: new Date(0),\n        },\n        customerId: '',\n    }\n};\n\nconst unitSlice = createSlice({\n    name: 'unit',\n    initialState,\n    reducers: {\n        setUnit: (state, action) => {state.unit = action.payload},\n    }\n});\n\nexport default unitSlice.reducer;\nexport const { setUnit } = unitSlice.actions;\n\n// define fetchUnit\n// take id as a parameter, and fetch the corresponding unit data from FireStore\n// if it doesn't exist in server, return error\n\nexport const fetchUnit = (id: string) => async ( dispatch: Dispatch ) => {\n    try{\n        db.collection('units').doc(id).get().then(doc => {\n            if (doc.exists) {\n                const unit : UnitDetail = {\n                    id: doc.id,\n                    errorCode: doc.data()?.errorCode,\n                    requiredAction: setRequiredAction(doc.data()?.errorCode),\n                    profile: {\n                        modelNumber: doc.data()?.profile.modelNumber,\n                        productTypeName: setProductTypeName(doc.data()?.profile.productType),\n                        location: doc.data()?.profile.location,\n                    },\n                    status: doc.data()?.status,\n                    timestamps: doc.data()?.timestamps,\n                    customerId: doc.data()?.customerId,\n                }\n                dispatch(setUnit(unit));\n            } else {\n                console.log(\"no such doc\");\n            }\n        });\n    } catch (err) {\n        console.log(err);\n    }\n}","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport unitsReducer from './units';\nimport unitReducer from './unit';\n\nconst rootReducer = combineReducers({\n    units: unitsReducer,\n    unit: unitReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nconst store = configureStore({ \n    reducer: rootReducer,\n    middleware: getDefaultMiddleware({\n        serializableCheck: false,\n    }),\n});\n\nexport default store;","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // blacky\n            main: '#000000',\n            light: '#242423'\n        },\n        secondary: {\n            // yellow\n            main: '#f5cb5c'\n        },\n        error: {\n            main: '#dd1c1a'\n        },\n    },\n    shape: {\n        // borderRadius: 20,\n    }\n});\n\nexport default theme;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n    display: flex;\n`;\n\nexport const Main = styled.main<{isOpen: boolean, drawerWidth: number}>`\n    flex-grow: 1;\n    padding: ${props => props.theme.spacing(3)}px;\n    transition: ${\n        props => props.theme.transitions.create('margin', {\n                 easing: props.theme.transitions.easing.sharp,\n                 duration: props.theme.transitions.duration.leavingScreen,\n        })\n    };\n    margin-left: -${props => props.drawerWidth}px;\n    ${props => props.isOpen && `\n        transition: ${\n            props.theme.transitions.create('margin', {\n            easing: props.theme.transitions.easing.easeOut,\n            duration: props.theme.transitions.duration.enteringScreen,\n            })\n        };\n        margin-left: 0;\n    `}\n`;","import styled from 'styled-components';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport AppBar from '@material-ui/core/AppBar';\n\nexport const StyledAppBar = styled(AppBar)<{\n    isOpen: boolean,\n    drawerWidth: number, \n   }>\n`\n    transition: ${\n        props => props.theme.transitions.create(['margin', 'width'], {\n        easing: props.theme.transitions.easing.sharp,\n        duration: props.theme.transitions.duration.leavingScreen,\n        })\n    };\n    ${props => props.isOpen && `\n        width: calc(100% - ${props.drawerWidth}px);\n        margin-left: ${props.drawerWidth}px;\n        transition: ${\n        props.theme.transitions.create(['margin', 'width'], {\n            easing: props.theme.transitions.easing.easeOut,\n            duration: props.theme.transitions.duration.enteringScreen,\n            })\n        };\n    `}\n`;\n\nexport const StyledIconButton = styled(IconButton)<{isOpen: boolean}>`\n    margin-right: ${props => props.theme.spacing(2)}px;\n    ${ ({isOpen})  => isOpen && `\n        display: none;\n    `}\n`;\n\nexport const StyledDrawer = styled(Drawer)<{drawerWidth: number}>`\n    width: ${({ drawerWidth }) => drawerWidth}px;\n    flex-shrink: 0;\n`;","import React from 'react';\n// import styled from 'styled-components';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n          }, \n    }),\n    );\n\nconst SideDrawerHeader: React.FC = (props) => {\n    const classes = useStyles();\n    // const theme = useTheme();\n    return (\n        <div className={classes.drawerHeader}>\n            {props.children}\n        </div>\n    );\n}\n\n// const $DrawerHeader = styled.div.attrs(props => ({\n//     ...props.theme.mixins.toolbar,\n// }))`\n//     display: flex;\n//     align-items: center;\n//     padding: ${props => props.theme.spacing(0, 1)};\n//     justify-content: flex-end;\n// `;\n\nexport default SideDrawerHeader;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { CarBattery as BatteryIcon } from 'mdi-material-ui';\n// import RoomIcon from '@material-ui/icons/Room';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport { Link } from 'react-router-dom';\n\ninterface NavigationItem{\n    text: string;\n    icon: JSX.Element;\n    link: string;\n}\n\nconst NavigationItems: NavigationItem[] = [\n    {\n        text: 'Home',\n        icon: <HomeIcon />,\n        link: '/',\n    },\n    // {\n    //     text: 'Map',\n    //     icon: <RoomIcon />,\n    //     link: '/',\n    // },\n    {\n        text: 'Battery Unts',\n        icon: <BatteryIcon />,\n        link: '/units',\n    },\n    { \n        text:'Customers',\n        icon: <ContactsIcon />,\n        link: '/',\n    },\n    {\n        text:'Add Customer',\n        icon: <PersonAddIcon />,\n        link: '/',\n    }\n];\n\nconst NavigationList: React.FC = () => (\n    <List>\n         {NavigationItems.map((item) => (\n            <ListItem component={Link} to={item.link} key={item.text} >\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n            </ListItem>\n            ))}\n    </List>\n);\n\nexport default NavigationList;","import React from 'react';\nimport * as S from './styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport SideDrawerHeader from './SideDrawerHeader';\nimport NavigationList from '../NavigationList/NavigationList';\n\ntype Props = {\n    drawerWidth: number;\n    isOpen: boolean;\n    drawerOpener: () => void;\n    drawerCloser: () => void;\n}\n\nconst useStyles = makeStyles({\n    drawerPaper: {\n        width: (props: Props) => props.drawerWidth,\n    },\n})\n\nconst SideDrawer: React.FC<Props> = (props) => {\n    const classes = useStyles(props);\n\n    return (\n        <>\n            <S.StyledAppBar\n              position=\"fixed\"\n              drawerWidth={props.drawerWidth}\n              isOpen={props.isOpen}\n            >\n                <Toolbar>\n                    <S.StyledIconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={props.drawerOpener}\n                        edge=\"start\"\n                        isOpen={props.isOpen}\n                    >\n                        <MenuIcon />\n                    </S.StyledIconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        RoBOT\n                    </Typography>\n                </Toolbar>\n            </S.StyledAppBar>\n            <S.StyledDrawer\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={props.isOpen}\n                drawerWidth={props.drawerWidth}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <SideDrawerHeader>\n                    <IconButton onClick={props.drawerCloser}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </SideDrawerHeader>\n                <NavigationList />\n            </S.StyledDrawer>\n        </>\n    );\n}\n\nexport default SideDrawer;\n","import React from 'react';\nimport * as S from './styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport SideDrawerHeader from '../Navigation/SideDrawer/SideDrawerHeader';\n\nconst drawerWidth = 240;\n\nconst Layout: React.FC = ( props ) => {\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return(\n        <S.Div>\n            <CssBaseline />\n            <SideDrawer\n                isOpen={open}\n                drawerOpener={handleDrawerOpen}\n                drawerCloser={handleDrawerClose}\n                drawerWidth={drawerWidth}\n            />\n            <S.Main\n              isOpen={open}\n              drawerWidth={drawerWidth}\n            >\n                <SideDrawerHeader />\n                {props.children}\n            </S.Main>\n        </S.Div>\n    );\n}\n\nexport default Layout;\n","import styled from 'styled-components';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport const SearchBar = styled.div`\n    position: relative;\n    border-radius: ${props => props.theme.shape.borderRadius}px;\n    border: 1px solid ${props=> props.theme.palette.primary.light};\n    background-color: ${props => props.theme.palette.common.white};\n    margin: auto;\n    width: 100%;\n    /* margin: ${props => props.theme.spacing(0, 0, 0, 2)}; */\n    ${props => props.theme.breakpoints.up('md')}{\n        margin-left: ${props => props.theme.spacing(1)}px;\n        width: auto;\n    }\n`;\n\nexport const StyledSearchIcon = styled(SearchIcon)`\n    margin: ${props=> props.theme.spacing(0, 0, 0, 2)};\n    height: 100%;\n    position: absolute;\n    pointer-events: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const SearchInput = styled(InputBase)`\n    color: inherit;\n    padding: ${props => props.theme.spacing(1, 0, 1, 0)};\n    padding-left: ${props => `calc(1em + ${props.theme.spacing(4)}px)`};\n    transition: ${props => props.theme.transitions.create('width')};\n    width: 100%;\n`;","import React from 'react';\nimport * as S from './styles';\n\nconst SearchBar: React.FC = (props) => (\n    <S.SearchBar>\n        <S.StyledSearchIcon color=\"primary\" />\n        <S.SearchInput\n                placeholder=\"Search by ID\"\n                inputProps={{ 'aria-label': 'search' }}\n        />\n    </S.SearchBar>\n);\n\nexport default SearchBar;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\ntype Props = {\n    buttonText: string;\n    buttonIcon: JSX.Element;\n    menuItems: Array<string>;\n}\n\nconst ToggleMenu: React.FC<Props> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n        return;\n        }\n\n        setOpen(false);\n    };\n\n    function handleListKeyDown(event: React.KeyboardEvent) {\n        if (event.key === 'Tab') {\n          event.preventDefault();\n          setOpen(false);\n        }\n      }\n    \n      // return focus to the button when we transitioned from !open -> open\n      const prevOpen = React.useRef(open);\n      React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n          anchorRef.current!.focus();\n        }\n    \n        prevOpen.current = open;\n      }, [open]);\n\n    const menuItemList = props.menuItems.map(menuItem => {\n        return (\n            <MenuItem onClick={handleClose}>{menuItem}</MenuItem>\n        );\n    });\n\n    return (\n        <>\n            <Button\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"primary\"\n                variant=\"outlined\"\n                disableElevation\n                startIcon={props.buttonIcon}\n            >\n               {props.buttonText}\n            </Button>\n            <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n                {({ TransitionProps, placement }) => (\n                    <Grow\n                    {...TransitionProps}\n                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                    >\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                                    {menuItemList}\n                                </MenuList>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </>\n    );\n}\n\nexport default ToggleMenu;","import React from 'react';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport ToggleMenu from '../ToggleMenu/ToggleMenu';\n\n// Component\nconst IndexToolbar: React.FC = () => {\n    const toggleMenuItemList = {\n        sortMenuItemList: ['ID', 'Customer', 'Status'],\n        filterMenuItemList: ['ID', 'Customer', 'Status'],\n    }\n\n    return(\n        // <Toolbar>\n            <Grid container justify=\"center\" spacing={1}>\n                <Grid item xs={12} md={6}>\n                    <SearchBar />\n                </Grid>\n                <Grid item xs md>\n                    <ToggleMenu\n                        buttonText='Sort by'\n                        buttonIcon={<ImportExportIcon />}\n                        menuItems={toggleMenuItemList.sortMenuItemList}               \n                    />\n                </Grid>\n                <Grid item xs md>\n                    <ToggleMenu\n                        buttonText='Filter by'\n                        buttonIcon={<FilterListIcon />}\n                        menuItems={toggleMenuItemList.filterMenuItemList}               \n                    />\n                </Grid>\n                <Grid item md={2} lg={3} />\n            </Grid>\n        // </Toolbar>\n    );\n}\n\nexport default IndexToolbar;","import styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\n// styled-components\nexport const UnitCard = styled(Card)<{requiredAction: string | undefined}>`\n    border: ${({requiredAction}) => (requiredAction === undefined ? 'inherit' : '1px solid red')};\n    margin: 10px auto;\n    padding: 3px 14px;\n    max-width: 345px;\n`;\n\nexport const UnitCardContent = styled(CardContent)`\n    display: flex;\n    flex: 1 0 auto;\n`;\n\nexport const UnitId = styled.h1`\n    font-size: 18px;\n    font-weight: 700;\n    margin: 0;\n`;\n\nexport const ModelNumber = styled.p`\n    font-size: 12px;\n    color: gray;\n    margin: 0;\n    padding-left: 2px;\n`;\n\nexport const Status = styled.a<{status: boolean}>`\n    border-radius: 3px;\n    width: 50%;\n    padding: 2px 5px;\n    background: transparent;\n    color: ${({status}) => status ? 'lightgreen' : 'gray'};\n    border: 2px solid ${({status}) => status ? 'lightgreen' : 'gray'};\n`;\n\nexport const OtherInfo = styled.p`\n    font-size: 16px;\n    font-weight: 700;\n`;\n\nexport const SOC = styled.div`\n    text-align: center;\n    margin: auto;\n    padding-left: 20px;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull';\nimport Battery90Icon from '@material-ui/icons/Battery90';\nimport Battery80Icon from '@material-ui/icons/Battery80';\nimport Battery60Icon from '@material-ui/icons/Battery60';\nimport Battery50Icon from '@material-ui/icons/Battery50';\nimport Battery30Icon from '@material-ui/icons/Battery30';\nimport Battery20Icon from '@material-ui/icons/Battery20';\nimport BatteryAlertIcon from '@material-ui/icons/BatteryAlert';\n\ntype Props = {\n    soc: number;\n    size: number;\n}\n\nconst BatteryIcon: React.FC<Props> = (props) => setBatteryIcon(props.soc, props.size);\n\nconst setBatteryIcon = (soc: number, size: number) => {\n    if (soc >=  0.95) {\n        return <BatteryFull htmlColor=\"green\" size={size} />;\n    } else if(soc >= 0.85) {\n        return <Battery90  htmlColor=\"green\" size={size} />;\n    } else if (soc >= 0.75) {\n        return <Battery80  htmlColor=\"lightgreen\" size={size} />;\n    } else if (soc >= 0.55) {\n        return <Battery60  htmlColor=\"lightgreen\" size={size} />;\n    } else if (soc >= 0.45) {\n        return <Battery50  htmlColor=\"yellow\" size={size} />;\n    } else if (soc >= 0.25) {\n        return <Battery30 htmlColor=\"orange\" size={size} />;\n    } else if (soc >= 0.1) {\n        return <Battery20  htmlColor=\"red\" size={size}/>;\n    } else {\n        return <BatteryAlert  htmlColor=\"red\" size={size} />;\n    };\n}\n\nconst BatteryIconBase = styled.div<{size: number}>`\n    font-size: ${({size}) => size}px;\n`;\n\nconst BatteryFull = BatteryIconBase.withComponent(BatteryFullIcon);\n\nconst Battery90 = BatteryIconBase.withComponent(Battery90Icon);\n\nconst Battery80 = BatteryIconBase.withComponent(Battery80Icon);\n\nconst Battery60 = BatteryIconBase.withComponent(Battery60Icon);\n\nconst Battery50 = BatteryIconBase.withComponent(Battery50Icon);\n\nconst Battery30 = BatteryIconBase.withComponent(Battery30Icon);\n\nconst Battery20 = BatteryIconBase.withComponent(Battery20Icon);\n\nconst BatteryAlert = BatteryIconBase.withComponent(BatteryAlertIcon);\n\nexport default BatteryIcon;","import React from 'react';\nimport { UnitSummary } from '../../../types/unit';\nimport * as S from './styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport BatteryIcon from '../../Icon/BatteryIcon/BatteryIcon';\nimport axios from 'axios';\n\nconst UnitCard: React.FC<UnitSummary> = (props) => {\n\n    let location: string = 'location: ' + props.profile.location.latitude.toString() + '...';\n    // getAddressFromGeoLocation(props.geoLocation.latitude, props.geoLocation.longitude)\n    // .then(res => {\n    //     location = res;\n    //     console.log('location: ' + location);\n    // });\n\n    return (\n        <S.UnitCard requiredAction={props.requiredAction}>\n            <CardHeader\n                title={props.requiredAction}\n                titleTypographyProps={{\n                    align: 'center',\n                    variant: 'body1',\n                    color: 'error',\n                }}\n            />\n            <S.UnitCardContent>\n                <div>\n                    <S.UnitId>{props.id}</S.UnitId>\n                    <S.ModelNumber>{props.profile.modelNumber}</S.ModelNumber>\n                    <S.OtherInfo>{props.profile.productTypeName}</S.OtherInfo>\n                    <S.OtherInfo>{location}</S.OtherInfo>\n                    <S.Status status={props.isPowerOn}>{props.isPowerOn ? 'ON' : 'OFF'}</S.Status>\n                </div>\n                <S.SOC>\n                    {/* styled-components aren't working for SOCIcon */}\n                    <BatteryIcon soc={props.soc} size={80}/>\n                    <S.OtherInfo>{Math.round(props.soc * 100)}%</S.OtherInfo>\n                </S.SOC>\n            </S.UnitCardContent>\n        </S.UnitCard>\n    );\n}\n\n\nconst getAddressFromGeoLocation = async (lat: number, lng: number) => {\n    const input: string =  lat.toString() + ',' + lng.toString();\n    const location: string = await axios.get(\n        'https://maps.googleapis.com/maps/api/geocode/json',\n        {\n            params: {\n                latlng:input,\n                key: 'AIzaSyDGVrzNW2FhUWk0-ompNE_KNcJdUT9_z4c',\n            },\n        }\n    )\n    .then((result) => {\n        console.log(result.data.results);\n        return result.data.results[6].formatted_address;\n    })\n    .catch(error => {\n        // console.log(error);\n        return 'error';\n    })\n    console.log(location);\n    return location;\n}\n\nexport default UnitCard;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const RouterLink = styled(Link)`\n    text-decoration: none;\n\n    &:focus, &:hover, &:visited, &:link, &:active {\n        text-decoration: none;\n    }\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../stores/';\nimport { initUnits } from '../../../stores/units';\nimport Grid from '@material-ui/core/Grid';\nimport IndexToobar from '../../../components/UI/IndexToolbar/IndexToobar';\nimport UnitCard from '../../../components/BatteryUnit/Units/UnitCard';\nimport * as S from './styles';\n\n// Component\nconst Units: React.FC = () => {\n    const dispatch = useDispatch();\n    const units = useSelector((state: RootState) => state.units.units);\n\n    useEffect(() => {\n        console.log('units data should be fetched at this point');\n        dispatch(initUnits());\n    }, []);\n\n    const unitsList = units.map(unit => {\n        return (\n            <Grid item xs={12} sm={6} md={4} key = {unit.id}>\n                <S.RouterLink to={`/units/${unit.id}`}>\n                    <UnitCard\n                        id = {unit.id}\n                        requiredAction = {unit.requiredAction}\n                        profile = {unit.profile}\n                        isPowerOn = {unit.isPowerOn}\n                        isCharging = {unit.isCharging}\n                        soc = {unit.soc}\n                    />\n                </S.RouterLink>\n            </Grid>\n        );\n    });\n\n\n    return(\n        <>\n            <IndexToobar />\n            <Grid container spacing={1}>\n                {unitsList}\n            </Grid>\n        </>\n    );\n}\n\nexport default Units;\n","import styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\n\nexport const InfoPaper = styled(Paper)`\n    /* text-align: center; */\n    margin: auto;\n    padding: 20px;\n`;\n\nexport const Header = styled.h2`\n    font-size: 20px;\n    margin:0;\n`;\n\nexport const Key = styled.h4`\n    font-size: 14px;\n    color: gray;\n`;\n\nexport const Value = styled.h3`\n    font-size: 17px;\n    word-wrap: break-word;\n`;\n\nexport const Status = styled.h3<{status: boolean}>`\n    border-radius: 3px;\n    width: 55%;\n    text-align: center;\n    padding: 2px 5px;\n    background: transparent;\n    color: ${({status}) => status ? 'lightgreen' : 'gray'};\n    border: 2px solid ${({status}) => status ? 'lightgreen' : 'gray'};\n`;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\n\ntype Props = {\n    itemKey: string;\n    // itemValue: string;\n};\n\nconst InfoItem: React.FC<Props> = (props) => {\n    return (\n        <>\n        <Grid item xs={5}>\n            <S.Key>{props.itemKey}</S.Key>\n        </Grid>\n        <Grid item xs={7}>\n            {props.children}\n        </Grid>\n        </>\n    );\n}\n\nexport default InfoItem;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport InfoItem from './InfoItem';\n\ntype UnitInfoProps = {\n    requiredAction: string | undefined;\n    id: string;\n    modelNumber: string;\n    productTypeName: string;\n    isPowerOn: boolean;\n};\n\nconst UnitInfo: React.FC<UnitInfoProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Unit Info</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"ID\">\n                    <S.Value>{props.id}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Model Numbe\">\n                    <S.Value>{props.modelNumber}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Product Type\">\n                    <S.Value>{props.productTypeName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Battery Status\">\n                    <S.Status status={props.isPowerOn}>{props.isPowerOn? 'ON' : 'Off' }</S.Status>\n                </InfoItem>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default UnitInfo;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport BatteryIcon from '../../Icon/BatteryIcon/BatteryIcon';\nimport InfoItem from './InfoItem';\n\ntype UnitPerformanceProps = {\n    isCharging: boolean;\n    soc: number;\n    soh: number;\n    capacity: number;\n    current: number;\n    voltage: number;\n};\n\nconst UnitPerformance: React.FC<UnitPerformanceProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Unit Performance</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"Capacity\">\n                    <S.Value>{props.capacity} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Current\">\n                    <S.Value>{props.current} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Voltage\">\n                    <S.Value>{props.voltage} Ah</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"SoC\">\n                    <S.Value>\n                        <Grid container spacing={0}>\n                            <Grid item xs={5}>\n                                <BatteryIcon soc={props.soc} size={60} />\n                            </Grid>\n                            <Grid item xs={7}>\n                                <S.Value>{Math.round(props.soc * 100)}%</S.Value>\n                            </Grid>\n                        </Grid>\n                    </S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"SoH\">\n                    <S.Value>\n                        <Grid container spacing={0}>\n                            <Grid item xs={5}>\n                                <BatteryIcon soc={props.soh} size={60} />\n                            </Grid>\n                            <Grid item xs={7}>\n                                <S.Value>{Math.round(props.soh * 100)}%</S.Value>\n                            </Grid>\n                        </Grid>\n                    </S.Value>\n                </InfoItem>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default UnitPerformance;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport * as S from './styles';\nimport InfoItem from './InfoItem';\nimport Button from '@material-ui/core/Button';\n\ntype CustomerInfoProps = {\n    companyName: string;\n    industry: string;\n    personnelName: string;\n    email: string;\n    phoneNumber: string;\n};\n\nconst CustomerInfo: React.FC<CustomerInfoProps> = (props) => {\n    // fetchCustomer should be here and props above should be managed in state\n\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <S.Header>Customer Info</S.Header>\n                </Grid>\n                <InfoItem itemKey=\"Company\">\n                    <S.Value>{props.companyName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Industry\">\n                    <S.Value>{props.industry}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Personnel\">\n                    <S.Value>{props.personnelName}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Email\">\n                    <S.Value>{props.email}</S.Value>\n                </InfoItem>\n                <InfoItem itemKey=\"Phone Number\">\n                    <S.Value>{props.phoneNumber}</S.Value>\n                </InfoItem>\n                <Grid item xs={6}>\n                    <Button variant=\"contained\" color=\"primary\">\n                        Customer Detail\n                    </Button>\n                </Grid>\n                <Grid item xs={6}> \n                    <Button variant=\"contained\" color=\"secondary\">\n                        View Contract\n                    </Button>\n                </Grid>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default CustomerInfo;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport GoogleMapReact from 'google-map-react';\nimport * as S from './styles';\nimport { GeoLocation } from '../../../types/unit';\n\ntype LocationMapProps = {\n    location: GeoLocation;\n    id: string;\n};\n\ntype Props = {\n    text: string;\n    lat: number;\n    lng: number;\n}\n\nconst AnyReactComponent: React.FC<Props> = (props) => <div>{props.text}</div>\n\nconst LocationMap: React.FC<LocationMapProps> = (props) => {\n    return (\n        <S.InfoPaper>\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <S.Header>Location</S.Header>\n                </Grid>\n                <Grid item xs={12} style={{ height: '50vh' }}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: 'AIzaSyDGVrzNW2FhUWk0-ompNE_KNcJdUT9_z4c' }}\n                        defaultCenter={{lat: props.location.latitude, lng: props.location.longitude}}\n                        defaultZoom={11}\n                    >\n                        <AnyReactComponent\n                            lat={props.location.latitude}\n                            lng={props.location.longitude}\n                            text={props.id}\n                        />\n                    </GoogleMapReact>\n               </Grid>\n            </Grid>\n        </S.InfoPaper>\n    );\n}\n\nexport default LocationMap;","import React, { useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../stores/';\nimport { fetchUnit } from '../../../stores/unit';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport UnitInfo from '../../../components/BatteryUnit/Unit/UnitInfo';\nimport UnitPerformance from '../../../components/BatteryUnit/Unit/UnitPerformance';\nimport CustomerInfo from '../../../components/BatteryUnit/Unit/CustomerInfo';\nimport LocationMap from '../../../components/BatteryUnit/Unit/LocationMap';\n\ntype UnitProps = {} & RouteComponentProps<{id: string}>;\n\nconst Unit: React.FC<UnitProps> = props => {\n    const dispatch = useDispatch();\n    const unit = useSelector((state: RootState) => state.unit.unit);\n    const id: string = props.match.params.id;\n\n    useEffect(() => {\n        console.log('fetching unit data');\n        dispatch(fetchUnit(id));\n    }, []);\n\n    let unitDetail = null;\n    \n    if( unit.id === '') {\n        unitDetail = (<p>loading...</p>);\n    } else {\n        let alertMessage = null;\n        if (unit.requiredAction !== undefined) {\n            alertMessage = (<Alert severity=\"error\">{unit.requiredAction}</Alert>);\n        }\n        unitDetail = (\n            <Grid container spacing={1}>\n                <Grid item xs={12} sm={12}>\n                    {alertMessage}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <UnitInfo\n                        requiredAction={unit.requiredAction}\n                        id={unit.id}\n                        modelNumber={unit.profile.modelNumber}\n                        productTypeName={unit.profile.productTypeName}\n                        isPowerOn={unit.status.isPowerOn}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <UnitPerformance\n                        isCharging={unit.status.isCharging}\n                        capacity={unit.status.capacity}\n                        current={unit.status.current}\n                        voltage={unit.status.voltage}\n                        soc={unit.status.soc}\n                        soh={unit.status.soh}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <CustomerInfo\n                        companyName=\"Komatsu\"\n                        industry=\"Heavy Machinery\"\n                        personnelName=\"Taro Yamada\"\n                        email=\"tyamada@hogehoge.co.jp\"\n                        phoneNumber=\"06-2345-1234\"\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <LocationMap\n                        location={unit.profile.location}\n                        id={unit.id}\n                    />\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        <>\n        {unitDetail}\n        </>\n    );\n}\n\nexport default Unit;","import React from 'react'\nimport Layout from '../components/Layout/Layout';\nimport axios from \"axios/index\";\n\nexport const Login: React.FC = () =>{\n  fetch('https://18.180.144.98:443/api/v1/session', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({name: 'root_name', pass: '1234567890'}),\n  })\n  .then((response) => response.json())\n  //Then with the data from the response in JSON...\n  .then((data) => {\n  console.log('Success:', data);\n  })\n  //Then with the error genereted...\n  .catch((error) => {\n  console.error('Error:', error);\n  })\n}\n//export default Kitao;\n","import React from 'react';\nimport {\n  StylesProvider,\n  ThemeProvider as MaterialThemeProvider\n} from '@material-ui/styles';\nimport {\n  ThemeProvider as StyledThemeProvider\n} from 'styled-components';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport theme from './theme';\nimport Layout from './components/Layout/Layout';\nimport Units from './containers/BatteryUnit/Units/Units';\nimport Unit from './containers/BatteryUnit/Unit/Unit';\nimport {Login} from './test/test';\n//import {Login} from './containers/API/Login';\n\nconst App: React.FC = () => {\n  const routes = (\n    <Switch>\n      <Route exact path='/units' component={Units}/>\n      <Route path='/units/:id' component={Unit}/>\n      <Route path='/' component={Login}/>\n    </Switch>\n  );\n  return (\n    <StylesProvider injectFirst>\n      <MaterialThemeProvider theme={theme}>\n        <StyledThemeProvider theme={theme}>\n          <Layout>\n            kitao test\n            {routes}\n          </Layout>\n        </StyledThemeProvider>\n      </MaterialThemeProvider>\n    </StylesProvider>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './stores/';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}